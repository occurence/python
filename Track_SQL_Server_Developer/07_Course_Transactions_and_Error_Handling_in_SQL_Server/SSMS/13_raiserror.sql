-- Use RAISERROR with a severity of 11, a state of 1, and the given @product_id. This code will execute without errors.
DECLARE @product_id INT = 5;

IF NOT EXISTS (SELECT * FROM products WHERE product_id = @product_id)
	-- Invoke RAISERROR with parameters
	RAISERROR('No product with id %d.', 11, 1, @product_id);
ELSE 
	SELECT * FROM products WHERE product_id = @product_id;

-- Set the value of @product_id to 50.
-- Click Run Code (not Submit Answer) to see the error.
-- Set @product_id back to 5.
-- Change the value
DECLARE @product_id INT = 50;

IF NOT EXISTS (SELECT * FROM products WHERE product_id = @product_id)
	RAISERROR('No product with id %d.', 11, 1, @product_id);
ELSE 
	SELECT * FROM products WHERE product_id = @product_id;

-- Catch the error generated by the RAISERROR statement you coded.
-- Select the error message using the appropriate function.
BEGIN TRY
    DECLARE @product_id INT = 5;
    IF NOT EXISTS (SELECT * FROM products WHERE product_id = @product_id)
        RAISERROR('No product with id %d.', 11, 1, @product_id);
    ELSE 
        SELECT * FROM products WHERE product_id = @product_id;
END TRY
-- Catch the error
BEGIN CATCH
	-- Select the error message
	SELECT ERROR_MESSAGE();
END CATCH    


-- Set the value of @product_idto 50.
-- Click Run Code (not Submit Answer) to see the error.
-- Set @product_id back to 5.
BEGIN TRY
	-- Change the value
    DECLARE @product_id INT = 50;	
    IF NOT EXISTS (SELECT * FROM products WHERE product_id = @product_id)
        RAISERROR('No product with id %d.', 11, 1, @product_id);
    ELSE 
        SELECT * FROM products WHERE product_id = @product_id;
END TRY
BEGIN CATCH
	SELECT ERROR_MESSAGE();
END CATCH